{"changed":true,"filter":false,"title":"Untitled7","tooltip":"/Untitled7","value":"#include <stdio.h>\n#include <stdlib.h>\n \n#include \"square.h\"\n \n/* BEGIN NO STUDENT COMMENTS */\nint tests_run = 0;\n/* END NO STUDENT COMMENTS */\n \nstatic char * test_get_number_of_messages() {\n int msgs;\n msgs = get_number_of_messages();\n \n mu_assert(\"There should be more than zero messages!\", msgs > 0);\n \n return 0;\n}\n \nstatic char * test_open_message_file() {\n FILE *fp;\n fp = open_message_file();\n  \n  mu_assert(\"The message file pointer should not be NULL!\", fp != NULL);\n  \n if (fp != NULL) {\n  fclose(fp);\n } \n \n return 0;\n}\n \nstatic char * test_advance_to_message () {\n FILE *fp;\n char correct[] = {'G', 'T', 'I', 'D', 'T'};\n \n for (int i = 0 ; i < 5; i++) {\n  fp = advance_to_msg(i); \n  printf(\"\\t... Checking ability to advance to message %d\\n\", i);\n  mu_assert(\"Found wrong message in first five.\", getc(fp) == correct[i]);\n  close_message_file(fp);\n }\n return 0;\n}\n \nstatic char * test_get_message_length () {\n  int lengths[] = {40, 24, 39, 76, 52, 79, 66, 88, 51, 22, 39, 42, 71, 40, 49, 32, 31, 67, 106, 20};\n  \n  /* \n  for (int i = 0 ; i < get_number_of_messages() ; i++) {\n   int length;\n   length = get_message_length(i);\n   printf(\"%d, \", length);\n  }\n  */\n  \n  for (int i = 0 ; i < get_number_of_messages() ; i++) {\n   int length;\n   length = get_message_length(i);\n   printf(\"\\t... Checking length of message index %d (%d)\\n\", i, length);\n   mu_assert(\"Found wrong message length.\",  length == lengths[i]);\n  }\n  return 0;\n}\n \nstatic char * test_read_message () {\n char * messages[] = {\"Godhasmadeofonebloodallpeoplesoftheearth\", \\\n                    \"Thereisdignityinalllabor\", \\\n                    \"Imaginationismoreimportantthanknowledge\", \\\n                    \"Donotdwellinthepastdonotdreamofthefutureconcentratethemindonthepresentmoment\", \\\n                    \"Thebestplacetofindahelpinghandisattheendofyourownarm\", \\\n                    \"IfyourstrengthissmalldontcarryheavyburdensIfyourwordsareworthlessdontgiveadvice\", \\\n                    \"Ifyouarepatientinonemomentofangeryouwillescapeahundreddaysofsorrow\", \\\n                    \"Ifyoumustplaydecideuponthreethingsatthestarttherulesofthegamethestakesandthequittingtime\", \\\n                    \"Learningisatreasurethatwillfollowitsownereverywhere\", \\\n                    \"Achangeisasgoodasarest\", \\\n                    \"Aknownmistakeisbetterthananunknowntruth\", \\\n                    \"Arroganceisaweedthatgrowsmostlyonadunghill\", \\\n                    \"Acuttingwordisworsethanabowstringacutmayhealbutthecutofthetonguedoesnot\", \\\n                    \"Afoollooksfordungwherethecowneverbrowsed\", \\\n                    \"Ifyoudontstandforsomethingyouwillfallforsomething\", \\\n                    \"Adversityisthefoundationofvirtue\", \\\n                    \"Anexcessofcourtesyisdiscourtesy\", \\\n                    \"Opinionsfoundedonprejudicearealwayssustainedwiththegreatestviolence\", \\\n                    \"InacountrywellgovernedpovertyissomethingtobeashamedofInacountrybadlygovernedwealthissomethingtobeashamedof\", \\\n                    \"Thecautiousseldomerr\" \\\n                    };\n \n for (int i = 0 ; i < get_number_of_messages() ; i++) {\n  int message_length = get_message_length(i);\n  char *msg = read_message(i);\n  printf(\"\\t... Checking correctness of message %d\\n\", i);\n  \n  for (int pos = 0 ; pos < message_length ; pos++) {\n   /* printf(\"POS[%d] msg[%c] messages[%c]\\n\", pos, msg[pos], messages[i][pos]); */\n   mu_assert(\"Found wrong character in message.\", msg[pos] = messages[i][pos]);\n  }\n  \n  free(msg);\n }\n return 0;\n}\n \nstatic char * all_tests() {\n mu_run_test(test_get_number_of_messages);\n mu_run_test(test_open_message_file);\n mu_run_test(test_advance_to_message);\n mu_run_test(test_get_message_length);\n mu_run_test(test_read_message);\n return 0;\n}\n \n/* Standard main() for running all tests. */\nint main(int argc, char **argv) {\n char *result = all_tests();\n if (result != 0) {\n     printf(\"%s\\n\", result);\n }\n else {\n     printf(\"ALL TESTS PASSED\\n\");\n }\n printf(\"Tests run: %d\\n\", tests_run);\n \n return result != 0;\n}","undoManager":{"mark":-1,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":18}},"text":"#include <stdio.h>"},{"action":"insertText","range":{"start":{"row":0,"column":18},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":123,"column":0}},"lines":["#include <stdlib.h>"," ","#include \"square.h\""," ","/* BEGIN NO STUDENT COMMENTS */","int tests_run = 0;","/* END NO STUDENT COMMENTS */"," ","static char * test_get_number_of_messages() {"," int msgs;"," msgs = get_number_of_messages();"," "," mu_assert(\"There should be more than zero messages!\", msgs > 0);"," "," return 0;","}"," ","static char * test_open_message_file() {"," FILE *fp;"," fp = open_message_file();","  ","  mu_assert(\"The message file pointer should not be NULL!\", fp != NULL);","  "," if (fp != NULL) {","  fclose(fp);"," } "," "," return 0;","}"," ","static char * test_advance_to_message () {"," FILE *fp;"," char correct[] = {'G', 'T', 'I', 'D', 'T'};"," "," for (int i = 0 ; i < 5; i++) {","  fp = advance_to_msg(i); ","  printf(\"\\t... Checking ability to advance to message %d\\n\", i);","  mu_assert(\"Found wrong message in first five.\", getc(fp) == correct[i]);","  close_message_file(fp);"," }"," return 0;","}"," ","static char * test_get_message_length () {","  int lengths[] = {40, 24, 39, 76, 52, 79, 66, 88, 51, 22, 39, 42, 71, 40, 49, 32, 31, 67, 106, 20};","  ","  /* ","  for (int i = 0 ; i < get_number_of_messages() ; i++) {","   int length;","   length = get_message_length(i);","   printf(\"%d, \", length);","  }","  */","  ","  for (int i = 0 ; i < get_number_of_messages() ; i++) {","   int length;","   length = get_message_length(i);","   printf(\"\\t... Checking length of message index %d (%d)\\n\", i, length);","   mu_assert(\"Found wrong message length.\",  length == lengths[i]);","  }","  return 0;","}"," ","static char * test_read_message () {"," char * messages[] = {\"Godhasmadeofonebloodallpeoplesoftheearth\", \\","                    \"Thereisdignityinalllabor\", \\","                    \"Imaginationismoreimportantthanknowledge\", \\","                    \"Donotdwellinthepastdonotdreamofthefutureconcentratethemindonthepresentmoment\", \\","                    \"Thebestplacetofindahelpinghandisattheendofyourownarm\", \\","                    \"IfyourstrengthissmalldontcarryheavyburdensIfyourwordsareworthlessdontgiveadvice\", \\","                    \"Ifyouarepatientinonemomentofangeryouwillescapeahundreddaysofsorrow\", \\","                    \"Ifyoumustplaydecideuponthreethingsatthestarttherulesofthegamethestakesandthequittingtime\", \\","                    \"Learningisatreasurethatwillfollowitsownereverywhere\", \\","                    \"Achangeisasgoodasarest\", \\","                    \"Aknownmistakeisbetterthananunknowntruth\", \\","                    \"Arroganceisaweedthatgrowsmostlyonadunghill\", \\","                    \"Acuttingwordisworsethanabowstringacutmayhealbutthecutofthetonguedoesnot\", \\","                    \"Afoollooksfordungwherethecowneverbrowsed\", \\","                    \"Ifyoudontstandforsomethingyouwillfallforsomething\", \\","                    \"Adversityisthefoundationofvirtue\", \\","                    \"Anexcessofcourtesyisdiscourtesy\", \\","                    \"Opinionsfoundedonprejudicearealwayssustainedwiththegreatestviolence\", \\","                    \"InacountrywellgovernedpovertyissomethingtobeashamedofInacountrybadlygovernedwealthissomethingtobeashamedof\", \\","                    \"Thecautiousseldomerr\" \\","                    };"," "," for (int i = 0 ; i < get_number_of_messages() ; i++) {","  int message_length = get_message_length(i);","  char *msg = read_message(i);","  printf(\"\\t... Checking correctness of message %d\\n\", i);","  ","  for (int pos = 0 ; pos < message_length ; pos++) {","   /* printf(\"POS[%d] msg[%c] messages[%c]\\n\", pos, msg[pos], messages[i][pos]); */","   mu_assert(\"Found wrong character in message.\", msg[pos] = messages[i][pos]);","  }","  ","  free(msg);"," }"," return 0;","}"," ","static char * all_tests() {"," mu_run_test(test_get_number_of_messages);"," mu_run_test(test_open_message_file);"," mu_run_test(test_advance_to_message);"," mu_run_test(test_get_message_length);"," mu_run_test(test_read_message);"," return 0;","}"," ","/* Standard main() for running all tests. */","int main(int argc, char **argv) {"," char *result = all_tests();"," if (result != 0) {","     printf(\"%s\\n\", result);"," }"," else {","     printf(\"ALL TESTS PASSED\\n\");"," }"," printf(\"Tests run: %d\\n\", tests_run);"," "," return result != 0;"]},{"action":"insertText","range":{"start":{"row":123,"column":0},"end":{"row":123,"column":1}},"text":"}"}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":123,"column":1},"end":{"row":123,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1410388232978}