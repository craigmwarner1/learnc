{"changed":true,"filter":false,"title":"Untitled4","tooltip":"/Untitled4","value":"#include <stdio.h>\n#include \"square.h\"\n \nint main () {\n  char *msg;\n  int length;\n  \n  for (int i = 0 ; i < get_number_of_messages(); i++) {\n    msg = read_message(i);\n    length = get_message_length(i);\n    \n    for (int i = 0; i < length; i++) {\n      printf(\"%c\", msg[i]);\n    }\n    \n    printf(\"\\n\");\n  }\n  \n  return 0;\n}","undoManager":{"mark":-1,"position":1,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":29}},"text":"# QUESTIONS FOR CONSIDERATION"},{"action":"insertText","range":{"start":{"row":0,"column":29},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":16,"column":0}},"lines":["# ","CFLAGS=-std=c99 -Wall -g"," ","test: square","\tgcc ${CFLAGS} -o square_test square.o square_test.c","\t","encoder: square","\tgcc ${CFLAGS} -o encoder square.o encoder.c ","\t","square:","\tgcc ${CFLAGS} -c square.c"," ","clean:","\trm -f square square_test encoder square.o","\t"]},{"action":"insertText","range":{"start":{"row":16,"column":0},"end":{"row":16,"column":30}},"text":"all: clean square test encoder"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":16,"column":0},"end":{"row":16,"column":30}},"text":"all: clean square test encoder"},{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":16,"column":0}},"nl":"\n","lines":["# QUESTIONS FOR CONSIDERATION","# ","CFLAGS=-std=c99 -Wall -g"," ","test: square","\tgcc ${CFLAGS} -o square_test square.o square_test.c","\t","encoder: square","\tgcc ${CFLAGS} -o encoder square.o encoder.c ","\t","square:","\tgcc ${CFLAGS} -c square.c"," ","clean:","\trm -f square square_test encoder square.o","\t"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":18}},"text":"#include <stdio.h>"},{"action":"insertText","range":{"start":{"row":0,"column":18},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":19,"column":0}},"lines":["#include \"square.h\""," ","int main () {","  char *msg;","  int length;","  ","  for (int i = 0 ; i < get_number_of_messages(); i++) {","    msg = read_message(i);","    length = get_message_length(i);","    ","    for (int i = 0; i < length; i++) {","      printf(\"%c\", msg[i]);","    }","    ","    printf(\"\\n\");","  }","  ","  return 0;"]},{"action":"insertText","range":{"start":{"row":19,"column":0},"end":{"row":19,"column":1}},"text":"}"}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":19,"column":1},"end":{"row":19,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1410388075997}